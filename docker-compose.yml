version: "3.8"

services:
  # Servicio PHP
  php:
    build: .  # Construye la imagen a partir del Dockerfile en la raíz del proyecto
    container_name: prueba_tecnica_php  # Nombre del contenedor PHP
    volumes:
      - .:/var/www  # Monta el código fuente en el contenedor para desarrollo
    expose:
      - "9000"  # Expone el puerto 9000 (usado por PHP-FPM)
    depends_on:
      - mysql  # Asegura que MySQL se inicie antes que PHP
    command: >  # Ejecuta los siguientes comandos dentro del contenedor PHP
      sh -c "
      echo 'Iniciando configuración inicial...' &&

      echo 'Esperando a que MySQL esté listo...' &&
      until nc -z -v -w30 mysql 3306; do
        echo 'MySQL aún no está listo...'
        sleep 5
      done &&
      echo 'MySQL está listo!' &&

      if [ ! -d 'vendor' ]; then
        echo 'Instalando dependencias de Composer...' &&
        composer install --no-interaction --optimize-autoloader &&
        composer require symfony/cache &&
        composer require --dev phpunit/phpunit
      else
        echo 'Dependencias de Composer ya instaladas, saltando instalación.'
      fi &&

      echo 'Actualizando esquema de base de datos con Doctrine...' &&
      vendor/bin/doctrine orm:schema-tool:update --force --complete &&

      echo 'Configuración completa. Iniciando PHP-FPM...' &&
      php-fpm"

  # Servicio Nginx (Servidor web)
  nginx:
    image: nginx:latest  # Usa la última versión de Nginx
    container_name: prueba_tecnica_nginx  # Nombre del contenedor Nginx
    ports:
      - "8080:80"  # Mapea el puerto 8080 del host al puerto 80 del contenedor
    volumes:
      - .:/var/www  # Monta el código fuente para que sea accesible por Nginx
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf  # Carga la configuración personalizada de Nginx
    depends_on:
      - php  # Asegura que PHP se inicie antes de Nginx

  # Servicio MySQL (Base de datos)
  mysql:
    image: mysql:5.7  # Usa la versión 5.7 de MySQL
    container_name: prueba_tecnica_mysql  # Nombre del contenedor MySQL
    environment:
      MYSQL_ROOT_PASSWORD: root  # Contraseña del usuario root de MySQL
      MYSQL_DATABASE: technologiesdb  # Nombre de la base de datos que se creará
      MYSQL_USER: user  # Nombre del usuario de la base de datos
      MYSQL_PASSWORD: pass123  # Contraseña del usuario de la base de datos
    ports:
      - "3306:3306"  # Mapea el puerto 3306 del host al puerto 3306 del contenedor
